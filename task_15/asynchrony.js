//Использование async/await делает код последовательным: ожидается выполнение 
//одной асинхронной функции и только после этого запускается вторая.

//Функция getSecondStr создает и возвращает объект Promise.
function getSecondStr() {
    return new Promise(resolve => {
        //setTimeout() позволяет вывести строку в консоль через 5 секунд.
        setTimeout(()=>{
            resolve(
                console.log("Вторая по счету строка")
            )
        }, 5000)
    })
}

//Добавленное перед определением функции ключевое слово async делает 
//функцию асинхронной.
(async function() {
    console.log('Первая по счету строка')
    
    //Ключевое слово await используется, чтобы дождаться выполнения 
    //асинхронной операции.
    await getSecondStr()

    console.log('Третья по счету строка')
})()

console.log('Четвертая по счету строка')